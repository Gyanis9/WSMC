import argparse


def get_config():
    parser = argparse.ArgumentParser()
    parser.add_argument('--exp_name', default=None, type=str)
    parser.add_argument('--total_round', default=5, type=int)
    parser.add_argument('--seed', default=2021, type=int)
    parser.add_argument('--num_of_train', default=420, type=int)
    parser.add_argument('--num_of_val', default=140, type=int)
    parser.add_argument('--num_of_test', default=140, type=int)
    parser.add_argument('--batch_size_per_step', default=32, type=int)
    parser.add_argument('--bert_path', default='./bert-base-uncased', type=str)
    parser.add_argument('--max_length', default=256, type=int)
    parser.add_argument('--max_grad_norm', default=10, type=int)
    parser.add_argument('--model_name', default='FEA', type=str)
    parser.add_argument('--task_name', default='Tacred', type=str)

    config = parser.parse_args()
    if config.task_name == 'Tacred':
        parser.add_argument('--num_of_relation', default=40, type=int)
        parser.add_argument('--rel_per_task', default=4, type=int)
        parser.add_argument('--data_file', default='./data/data_with_marker_tacred.json', type=str)
        parser.add_argument('--cache_file', default='./data/TACRED_data.pt', type=str)
        parser.add_argument('--relation_file', default='./data/id2rel_tacred.json', type=str)
        parser.add_argument("--p1", default=0.3, type=float)
        parser.add_argument("--p2", default=4.7, type=float)
        parser.add_argument("--gamma", default=7.4, type=float)
        parser.add_argument("--gamma2", default=1.0, type=float)
        parser.add_argument("--alpha", default=0.98, type=float)
        parser.add_argument("--beta", default=0.67, type=float)
        parser.add_argument("--temperature", default=6.0, type=float)
        parser.add_argument("--contrastive_temperature", default=0.72, type=float)
        parser.add_argument("--num_negatives", default=30, type=int)
        parser.add_argument("--top_k", default=0.174, type=float)
        parser.add_argument("--threshold", default=0.967, type=float)
        parser.add_argument("--weight1", default=1.0, type=float)
        parser.add_argument("--weight2", default=1.0, type=float)
        parser.add_argument("--weight3", default=1.0, type=float)
        parser.add_argument('--memory_size', default=10, type=int)
    else:
        parser.add_argument('--num_of_relation', default=80, type=int)
        parser.add_argument('--rel_per_task', default=8, type=int)
        parser.add_argument('--data_file', default='./data/data_with_marker.json', type=str)
        parser.add_argument('--cache_file', default='./data/fewrel_data.pt', type=str)
        parser.add_argument('--relation_file', default='./data/id2rel.json', type=str)
        parser.add_argument("--p1", default=0.3, type=float)
        parser.add_argument("--p2", default=2.3, type=float)
        parser.add_argument("--gamma", default=9.9, type=float)
        parser.add_argument("--alpha", default=0.42, type=float)
        parser.add_argument("--beta", default=0.99, type=float)
        parser.add_argument("--temperature", default=6.5, type=float)
        parser.add_argument("--contrastive_temperature", default=0.63, type=float)
        parser.add_argument("--num_negatives", default=30, type=int)
        parser.add_argument("--top_k", default=0.200, type=float)
        parser.add_argument("--threshold", default=0.995, type=float)
        parser.add_argument("--weight1", default=1.0, type=float)
        parser.add_argument("--weight2", default=1.0, type=float)
        parser.add_argument("--weight3", default=1.0, type=float)
        parser.add_argument('--memory_size', default=10, type=int)

    parser.add_argument('--device', default='cuda', type=str)
    parser.add_argument('--vocab_size', default=30522, type=int)

    parser.add_argument("--wake_epochs", default=2, type=int)
    parser.add_argument("--sleep_epochs", default=2, type=int)

    parser.add_argument('--drop_out', default=0.5, type=float)
    parser.add_argument('--pattern', default='entity_marker', type=str)
    parser.add_argument('--key_size', default=256, type=int)
    parser.add_argument('--head_size', default=768, type=int)
    parser.add_argument('--encoder_output_size', default=768, type=int)
    parser.add_argument('--mem_size', default=768, type=int)

    parser.add_argument("--encoder_lr", default=1e-5, type=float)
    parser.add_argument("--classifer_lr", default=1e-3, type=float)

    config = parser.parse_args()
    return config
